{
  "contractName": "Pausable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/lifecycle/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe6b72c96d1bad67df55e7b7090b2caa3d2ab96231081ffc9769c14d2b244c19d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30b655e5c4d0839ed166778c8c4ef5dc8adf71737639e734dcdebd710702b4bd\",\"dweb:/ipfs/QmcwA21oLvG3qmWUgTwYVAZVS6tGFdRVYjRP5oogRMGvLd\"]},\"/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x2be57f073785d13dd2b16f1136091333ed77e315872ca5f0b3b85b8be9fc202f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af952cb919b0693130f5addfac402eef84054cc06d688dee95740e28a817f4a6\",\"dweb:/ipfs/Qme9wMyxLr6exyE1iRr4WFnPpk1JvNAokzkvLDJa3ssFgh\"]},\"/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/util/Context.sol\":{\"keccak256\":\"0x3e13fc346aabe99ca12f0c076dbb15b3b3bfc15c0c1499ed055eb59309cfa19e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d2c065cedd38a21933a29b6e10306cc47abe586665821ee7a73beae016aa39\",\"dweb:/ipfs/QmTwfJTwuoxG98fQKi3oEs7q1WwCQ4qNTZCfHufN3zWt3m\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805460ff60a01b1916905534801561001d57600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061043b8061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a146100675780635c975abb14610071578063715018a61461009a5780638456cb59146100a25780638da5cb5b146100aa578063f2fde38b146100c5575b600080fd5b61006f6100d8565b005b60005461008590600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61006f610190565b61006f610204565b6000546040516001600160a01b039091168152602001610091565b61006f6100d33660046103a0565b6102b6565b6000546001600160a01b0316331461010b5760405162461bcd60e51b8152600401610102906103d0565b60405180910390fd5b600054600160a01b900460ff1661015a5760405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081b9bdd081c185d5cd959606a1b6044820152606401610102565b6000805460ff60a01b191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b6000546001600160a01b031633146101ba5760405162461bcd60e51b8152600401610102906103d0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461022e5760405162461bcd60e51b8152600401610102906103d0565b600054600160a01b900460ff161561027a5760405162461bcd60e51b815260206004820152600f60248201526e10dbdb9d1c9858dd081c185d5cd959608a1b6044820152606401610102565b6000805460ff60a01b1916600160a01b1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b6000546001600160a01b031633146102e05760405162461bcd60e51b8152600401610102906103d0565b6001600160a01b0381166103455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610102565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156103b257600080fd5b81356001600160a01b03811681146103c957600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212208c577760875501e126c5b0b81627f28a910983cead1021805e7cee92d8b12b8964736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a146100675780635c975abb14610071578063715018a61461009a5780638456cb59146100a25780638da5cb5b146100aa578063f2fde38b146100c5575b600080fd5b61006f6100d8565b005b60005461008590600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61006f610190565b61006f610204565b6000546040516001600160a01b039091168152602001610091565b61006f6100d33660046103a0565b6102b6565b6000546001600160a01b0316331461010b5760405162461bcd60e51b8152600401610102906103d0565b60405180910390fd5b600054600160a01b900460ff1661015a5760405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081b9bdd081c185d5cd959606a1b6044820152606401610102565b6000805460ff60a01b191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b6000546001600160a01b031633146101ba5760405162461bcd60e51b8152600401610102906103d0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461022e5760405162461bcd60e51b8152600401610102906103d0565b600054600160a01b900460ff161561027a5760405162461bcd60e51b815260206004820152600f60248201526e10dbdb9d1c9858dd081c185d5cd959608a1b6044820152606401610102565b6000805460ff60a01b1916600160a01b1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b6000546001600160a01b031633146102e05760405162461bcd60e51b8152600401610102906103d0565b6001600160a01b0381166103455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610102565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156103b257600080fd5b81356001600160a01b03811681146103c957600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212208c577760875501e126c5b0b81627f28a910983cead1021805e7cee92d8b12b8964736f6c63430008060033",
  "immutableReferences": {},
  "sourceMap": "89:874:17:-:0;;;186:5;165:26;;-1:-1:-1;;;;165:26:17;;;89:874;;;;;;;;;-1:-1:-1;391:17:16;433:18;;-1:-1:-1;;;;;;433:18:16;168:10:22;433:18:16;;;;;466:43;;168:10:22;;;;466:43:16;;391:17;;466:43;381:135;89:874:17;;;;;;",
  "deployedSourceMap": "89:874:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:102;;;:::i;:::-;;165:26;;;;;-1:-1:-1;;;165:26:17;;;;;;;;;678:14:27;;671:22;653:41;;641:2;626:18;165:26:17;;;;;;;;1224:145:16;;;:::i;669:100:17:-;;;:::i;592:85:16:-;638:7;664:6;592:85;;-1:-1:-1;;;;;664:6:16;;;451:51:27;;439:2;424:18;592:85:16;406:102:27;1518:274:16;;;;;;:::i;:::-;;:::i;859:102:17:-;638:7:16;664:6;-1:-1:-1;;;;;664:6:16;168:10:22;804:23:16;796:68;;;;-1:-1:-1;;;796:68:16;;;;;;;:::i;:::-;;;;;;;;;534:6:17::1;::::0;-1:-1:-1;;;534:6:17;::::1;;;526:38;;;::::0;-1:-1:-1;;;526:38:17;;1658:2:27;526:38:17::1;::::0;::::1;1640:21:27::0;1697:2;1677:18;;;1670:30;-1:-1:-1;;;1716:18:27;;;1709:49;1775:18;;526:38:17::1;1630:169:27::0;526:38:17::1;925:5:::2;916:14:::0;;-1:-1:-1;;;;916:14:17::2;::::0;;945:9:::2;::::0;::::2;::::0;925:5;945:9:::2;859:102::o:0;1224:145:16:-;638:7;664:6;-1:-1:-1;;;;;664:6:16;168:10:22;804:23:16;796:68;;;;-1:-1:-1;;;796:68:16;;;;;;;:::i;:::-;1330:1:::1;1314:6:::0;;1293:40:::1;::::0;-1:-1:-1;;;;;1314:6:16;;::::1;::::0;1293:40:::1;::::0;1330:1;;1293:40:::1;1360:1;1343:19:::0;;-1:-1:-1;;;;;;1343:19:16::1;::::0;;1224:145::o;669:100:17:-;638:7:16;664:6;-1:-1:-1;;;;;664:6:16;168:10:22;804:23:16;796:68;;;;-1:-1:-1;;;796:68:16;;;;;;;:::i;:::-;345:6:17::1;::::0;-1:-1:-1;;;345:6:17;::::1;;;344:7;336:35;;;::::0;-1:-1:-1;;;336:35:17;;1314:2:27;336:35:17::1;::::0;::::1;1296:21:27::0;1353:2;1333:18;;;1326:30;-1:-1:-1;;;1372:18:27;;;1365:45;1427:18;;336:35:17::1;1286:165:27::0;336:35:17::1;727:6:::2;:13:::0;;-1:-1:-1;;;;727:13:17::2;-1:-1:-1::0;;;727:13:17::2;::::0;;755:7:::2;::::0;::::2;::::0;727:6;755:7:::2;669:100::o:0;1518:274:16:-;638:7;664:6;-1:-1:-1;;;;;664:6:16;168:10:22;804:23:16;796:68;;;;-1:-1:-1;;;796:68:16;;;;;;;:::i;:::-;-1:-1:-1;;;;;1619:22:16;::::1;1598:107;;;::::0;-1:-1:-1;;;1598:107:16;;907:2:27;1598:107:16::1;::::0;::::1;889:21:27::0;946:2;926:18;;;919:30;985:34;965:18;;;958:62;-1:-1:-1;;;1036:18:27;;;1029:36;1082:19;;1598:107:16::1;879:228:27::0;1598:107:16::1;1741:6;::::0;;1720:38:::1;::::0;-1:-1:-1;;;;;1720:38:16;;::::1;::::0;1741:6;::::1;::::0;1720:38:::1;::::0;::::1;1768:6;:17:::0;;-1:-1:-1;;;;;;1768:17:16::1;-1:-1:-1::0;;;;;1768:17:16;;;::::1;::::0;;;::::1;::::0;;1518:274::o;14:286:27:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:27;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:27:o;1804:356::-;2006:2;1988:21;;;2025:18;;;2018:30;2084:34;2079:2;2064:18;;2057:62;2151:2;2136:18;;1978:182::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.6;\n\nimport \"../access/Ownable.sol\";\n\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused, \"Contract paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused, \"Contract not paused\");\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() public onlyOwner whenNotPaused {\n        paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() public onlyOwner whenPaused {\n        paused = false;\n        emit Unpause();\n    }\n}\n",
  "sourcePath": "/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/lifecycle/Pausable.sol",
  "ast": {
    "absolutePath": "/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/lifecycle/Pausable.sol",
    "exportedSymbols": {
      "Context": [
        3955
      ],
      "Ownable": [
        3423
      ],
      "Pausable": [
        3489
      ]
    },
    "id": 3490,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3425,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:17"
      },
      {
        "absolutePath": "/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/access/Ownable.sol",
        "file": "../access/Ownable.sol",
        "id": 3426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3490,
        "sourceUnit": 3424,
        "src": "56:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3427,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3423,
              "src": "110:7:17"
            },
            "id": 3428,
            "nodeType": "InheritanceSpecifier",
            "src": "110:7:17"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3489,
        "linearizedBaseContracts": [
          3489,
          3423,
          3955
        ],
        "name": "Pausable",
        "nameLocation": "98:8:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 3430,
            "name": "Pause",
            "nameLocation": "130:5:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:2:17"
            },
            "src": "124:14:17"
          },
          {
            "anonymous": false,
            "id": 3432,
            "name": "Unpause",
            "nameLocation": "149:7:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:2:17"
            },
            "src": "143:16:17"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 3435,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "177:6:17",
            "nodeType": "VariableDeclaration",
            "scope": 3489,
            "src": "165:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3433,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "165:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3434,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "186:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3445,
              "nodeType": "Block",
              "src": "326:63:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "344:7:17",
                        "subExpression": {
                          "id": 3439,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "345:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420706175736564",
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
                          "typeString": "literal_string \"Contract paused\""
                        },
                        "value": "Contract paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
                          "typeString": "literal_string \"Contract paused\""
                        }
                      ],
                      "id": 3438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "336:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3443,
                  "nodeType": "ExpressionStatement",
                  "src": "336:35:17"
                },
                {
                  "id": 3444,
                  "nodeType": "PlaceholderStatement",
                  "src": "381:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3436,
              "nodeType": "StructuredDocumentation",
              "src": "198:98:17",
              "text": " @dev Modifier to make a function callable only when the contract is not paused."
            },
            "id": 3446,
            "name": "whenNotPaused",
            "nameLocation": "310:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:2:17"
            },
            "src": "301:88:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3455,
              "nodeType": "Block",
              "src": "516:66:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3450,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3435,
                        "src": "534:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f7420706175736564",
                        "id": 3451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c30677bd7081a9235a2e690f51cde22929b68bc8dcee0f346b4bef5e173b93d",
                          "typeString": "literal_string \"Contract not paused\""
                        },
                        "value": "Contract not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c30677bd7081a9235a2e690f51cde22929b68bc8dcee0f346b4bef5e173b93d",
                          "typeString": "literal_string \"Contract not paused\""
                        }
                      ],
                      "id": 3449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "526:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "526:38:17"
                },
                {
                  "id": 3454,
                  "nodeType": "PlaceholderStatement",
                  "src": "574:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3447,
              "nodeType": "StructuredDocumentation",
              "src": "395:94:17",
              "text": " @dev Modifier to make a function callable only when the contract is paused."
            },
            "id": 3456,
            "name": "whenPaused",
            "nameLocation": "503:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:17"
            },
            "src": "494:88:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3471,
              "nodeType": "Block",
              "src": "717:52:17",
              "statements": [
                {
                  "expression": {
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3464,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "727:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "736:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "727:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3467,
                  "nodeType": "ExpressionStatement",
                  "src": "727:13:17"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3468,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "755:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:7:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3470,
                  "nodeType": "EmitStatement",
                  "src": "750:12:17"
                }
              ]
            },
            "documentation": {
              "id": 3457,
              "nodeType": "StructuredDocumentation",
              "src": "588:76:17",
              "text": " @dev called by the owner to pause, triggers stopped state"
            },
            "functionSelector": "8456cb59",
            "id": 3472,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3459,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "693:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "693:9:17"
              },
              {
                "id": 3462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3461,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3446,
                  "src": "703:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "703:13:17"
              }
            ],
            "name": "pause",
            "nameLocation": "678:5:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:17"
            },
            "returnParameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:17"
            },
            "scope": 3489,
            "src": "669:100:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3487,
              "nodeType": "Block",
              "src": "906:55:17",
              "statements": [
                {
                  "expression": {
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3480,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "916:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "925:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "916:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "916:14:17"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3484,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3432,
                      "src": "945:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:9:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3486,
                  "nodeType": "EmitStatement",
                  "src": "940:14:17"
                }
              ]
            },
            "documentation": {
              "id": 3473,
              "nodeType": "StructuredDocumentation",
              "src": "775:79:17",
              "text": " @dev called by the owner to unpause, returns to normal state"
            },
            "functionSelector": "3f4ba83a",
            "id": 3488,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3475,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "885:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "885:9:17"
              },
              {
                "id": 3478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3477,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3456,
                  "src": "895:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "895:10:17"
              }
            ],
            "name": "unpause",
            "nameLocation": "868:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:2:17"
            },
            "returnParameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:17"
            },
            "scope": 3489,
            "src": "859:102:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3490,
        "src": "89:874:17",
        "usedErrors": []
      }
    ],
    "src": "32:932:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/lifecycle/Pausable.sol",
    "exportedSymbols": {
      "Context": [
        3955
      ],
      "Ownable": [
        3423
      ],
      "Pausable": [
        3489
      ]
    },
    "id": 3490,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3425,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:17"
      },
      {
        "absolutePath": "/Users/tabatrung/Documents/Work/NFTGameTamQuoc/projects/public/MAT-nft/contracts/access/Ownable.sol",
        "file": "../access/Ownable.sol",
        "id": 3426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3490,
        "sourceUnit": 3424,
        "src": "56:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3427,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3423,
              "src": "110:7:17"
            },
            "id": 3428,
            "nodeType": "InheritanceSpecifier",
            "src": "110:7:17"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3489,
        "linearizedBaseContracts": [
          3489,
          3423,
          3955
        ],
        "name": "Pausable",
        "nameLocation": "98:8:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 3430,
            "name": "Pause",
            "nameLocation": "130:5:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:2:17"
            },
            "src": "124:14:17"
          },
          {
            "anonymous": false,
            "id": 3432,
            "name": "Unpause",
            "nameLocation": "149:7:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:2:17"
            },
            "src": "143:16:17"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 3435,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "177:6:17",
            "nodeType": "VariableDeclaration",
            "scope": 3489,
            "src": "165:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3433,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "165:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3434,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "186:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3445,
              "nodeType": "Block",
              "src": "326:63:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "344:7:17",
                        "subExpression": {
                          "id": 3439,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "345:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420706175736564",
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
                          "typeString": "literal_string \"Contract paused\""
                        },
                        "value": "Contract paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
                          "typeString": "literal_string \"Contract paused\""
                        }
                      ],
                      "id": 3438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "336:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3443,
                  "nodeType": "ExpressionStatement",
                  "src": "336:35:17"
                },
                {
                  "id": 3444,
                  "nodeType": "PlaceholderStatement",
                  "src": "381:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3436,
              "nodeType": "StructuredDocumentation",
              "src": "198:98:17",
              "text": " @dev Modifier to make a function callable only when the contract is not paused."
            },
            "id": 3446,
            "name": "whenNotPaused",
            "nameLocation": "310:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:2:17"
            },
            "src": "301:88:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3455,
              "nodeType": "Block",
              "src": "516:66:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3450,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3435,
                        "src": "534:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f7420706175736564",
                        "id": 3451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c30677bd7081a9235a2e690f51cde22929b68bc8dcee0f346b4bef5e173b93d",
                          "typeString": "literal_string \"Contract not paused\""
                        },
                        "value": "Contract not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c30677bd7081a9235a2e690f51cde22929b68bc8dcee0f346b4bef5e173b93d",
                          "typeString": "literal_string \"Contract not paused\""
                        }
                      ],
                      "id": 3449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "526:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "526:38:17"
                },
                {
                  "id": 3454,
                  "nodeType": "PlaceholderStatement",
                  "src": "574:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3447,
              "nodeType": "StructuredDocumentation",
              "src": "395:94:17",
              "text": " @dev Modifier to make a function callable only when the contract is paused."
            },
            "id": 3456,
            "name": "whenPaused",
            "nameLocation": "503:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:17"
            },
            "src": "494:88:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3471,
              "nodeType": "Block",
              "src": "717:52:17",
              "statements": [
                {
                  "expression": {
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3464,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "727:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "736:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "727:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3467,
                  "nodeType": "ExpressionStatement",
                  "src": "727:13:17"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3468,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3430,
                      "src": "755:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:7:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3470,
                  "nodeType": "EmitStatement",
                  "src": "750:12:17"
                }
              ]
            },
            "documentation": {
              "id": 3457,
              "nodeType": "StructuredDocumentation",
              "src": "588:76:17",
              "text": " @dev called by the owner to pause, triggers stopped state"
            },
            "functionSelector": "8456cb59",
            "id": 3472,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3459,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "693:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "693:9:17"
              },
              {
                "id": 3462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3461,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3446,
                  "src": "703:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "703:13:17"
              }
            ],
            "name": "pause",
            "nameLocation": "678:5:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:17"
            },
            "returnParameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:17"
            },
            "scope": 3489,
            "src": "669:100:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3487,
              "nodeType": "Block",
              "src": "906:55:17",
              "statements": [
                {
                  "expression": {
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3480,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "916:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "925:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "916:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "916:14:17"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3484,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3432,
                      "src": "945:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:9:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3486,
                  "nodeType": "EmitStatement",
                  "src": "940:14:17"
                }
              ]
            },
            "documentation": {
              "id": 3473,
              "nodeType": "StructuredDocumentation",
              "src": "775:79:17",
              "text": " @dev called by the owner to unpause, returns to normal state"
            },
            "functionSelector": "3f4ba83a",
            "id": 3488,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3475,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "885:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "885:9:17"
              },
              {
                "id": 3478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3477,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3456,
                  "src": "895:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "895:10:17"
              }
            ],
            "name": "unpause",
            "nameLocation": "868:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:2:17"
            },
            "returnParameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:17"
            },
            "scope": 3489,
            "src": "859:102:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3490,
        "src": "89:874:17",
        "usedErrors": []
      }
    ],
    "src": "32:932:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-09-26T16:08:34.534Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}